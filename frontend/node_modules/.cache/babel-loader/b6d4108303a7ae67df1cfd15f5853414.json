{"ast":null,"code":"import _classCallCheck from \"/Users/sheena/Documents/GitHub/CMPE272/Project-Team-1/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/sheena/Documents/GitHub/CMPE272/Project-Team-1/frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/sheena/Documents/GitHub/CMPE272/Project-Team-1/frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/sheena/Documents/GitHub/CMPE272/Project-Team-1/frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/sheena/Documents/GitHub/CMPE272/Project-Team-1/frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/sheena/Documents/GitHub/CMPE272/Project-Team-1/frontend/src/components/companyForm.jsx\";\nimport React, { Component } from \"react\";\nimport Navbar from \"./common/navbar\";\nimport { Field, reduxForm } from \"redux-form\";\nimport { connect } from \"react-redux\";\n\nvar CompanyForm =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(CompanyForm, _Component);\n\n  function CompanyForm() {\n    _classCallCheck(this, CompanyForm);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(CompanyForm).apply(this, arguments));\n  }\n\n  _createClass(CompanyForm, [{\n    key: \"renderField\",\n    value: function renderField(field) {\n      var _field$meta = field.meta,\n          touched = _field$meta.touched,\n          error = _field$meta.error;\n      var className = \"form-group \".concat(touched && error ? \"has-danger\" : \"\");\n\n      if (field.label === \"Company Timings\") {\n        return React.createElement(\"div\", {\n          className: className,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 15\n          },\n          __self: this\n        }, React.createElement(\"input\", Object.assign({\n          className: \"form-control form_field\",\n          type: \"time\"\n        }, field.input, {\n          placeholder: field.label,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 16\n          },\n          __self: this\n        })), React.createElement(\"div\", {\n          className: \"text-help\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 22\n          },\n          __self: this\n        }, touched ? error : \"\"));\n      } else {\n        return React.createElement(\"div\", {\n          className: className,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 27\n          },\n          __self: this\n        }, React.createElement(\"input\", Object.assign({\n          className: \"form-control form_field\",\n          type: \"text\"\n        }, field.input, {\n          placeholder: field.label,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 28\n          },\n          __self: this\n        })), React.createElement(\"div\", {\n          className: \"text-help\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34\n          },\n          __self: this\n        }, touched ? error : \"\"));\n      }\n    }\n  }, {\n    key: \"onSubmit\",\n    value: function onSubmit(values) {\n      this.props.history.push(\"/suggestions\");\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var handleSubmit = this.props.handleSubmit;\n      return React.createElement(\"div\", {\n        className: \"home\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(Navbar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"company_form\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onSubmit: handleSubmit(this.onSubmit.bind(this)),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(Field, {\n        name: \"firstname\",\n        component: this.renderField,\n        label: \"First Name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }), React.createElement(Field, {\n        name: \"lastname\",\n        component: this.renderField,\n        label: \"Last Name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }), React.createElement(Field, {\n        name: \"companyname\",\n        component: this.renderField,\n        label: \"Company Name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }), React.createElement(Field, {\n        name: \"department\",\n        component: this.renderField,\n        label: \"Department\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }), React.createElement(Field, {\n        name: \"homeaddress\",\n        component: this.renderField,\n        label: \"Home Address\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }), React.createElement(Field, {\n        name: \"companyaddress\",\n        component: this.renderField,\n        label: \"Company Address\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }), React.createElement(Field, {\n        name: \"timings\",\n        component: this.renderField,\n        label: \"Company Timings\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, \"Submit\"))));\n    }\n  }]);\n\n  return CompanyForm;\n}(Component);\n\nexport default reduxForm({\n  // validate,\n  form: \"companyForm\"\n})(connect(null, null)(CompanyForm));","map":{"version":3,"sources":["/Users/sheena/Documents/GitHub/CMPE272/Project-Team-1/frontend/src/components/companyForm.jsx"],"names":["React","Component","Navbar","Field","reduxForm","connect","CompanyForm","field","meta","touched","error","className","label","input","values","props","history","push","handleSubmit","onSubmit","bind","renderField","form"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Navbar from \"./common/navbar\";\nimport { Field, reduxForm } from \"redux-form\";\nimport { connect } from \"react-redux\";\n\nclass CompanyForm extends Component {\n  renderField(field) {\n    const {\n      meta: { touched, error }\n    } = field;\n\n    let className = `form-group ${touched && error ? \"has-danger\" : \"\"}`;\n    if (field.label === \"Company Timings\") {\n      return (\n        <div className={className}>\n          <input\n            className=\"form-control form_field\"\n            type=\"time\"\n            {...field.input}\n            placeholder={field.label}\n          />\n          <div className=\"text-help\">{touched ? error : \"\"}</div>\n        </div>\n      );\n    } else {\n      return (\n        <div className={className}>\n          <input\n            className=\"form-control form_field\"\n            type=\"text\"\n            {...field.input}\n            placeholder={field.label}\n          />\n          <div className=\"text-help\">{touched ? error : \"\"}</div>\n        </div>\n      );\n    }\n  }\n\n  onSubmit(values) {\n    this.props.history.push(\"/suggestions\");\n  }\n\n  render() {\n    const { handleSubmit } = this.props;\n    return (\n      <div className=\"home\">\n        <Navbar />\n        <div className=\"company_form\">\n          <form onSubmit={handleSubmit(this.onSubmit.bind(this))}>\n            <Field\n              name=\"firstname\"\n              component={this.renderField}\n              label=\"First Name\"\n            />\n            <Field\n              name=\"lastname\"\n              component={this.renderField}\n              label=\"Last Name\"\n            />\n            <Field\n              name=\"companyname\"\n              component={this.renderField}\n              label=\"Company Name\"\n            />\n            <Field\n              name=\"department\"\n              component={this.renderField}\n              label=\"Department\"\n            />\n            <Field\n              name=\"homeaddress\"\n              component={this.renderField}\n              label=\"Home Address\"\n            />\n            <Field\n              name=\"companyaddress\"\n              component={this.renderField}\n              label=\"Company Address\"\n            />\n            <Field\n              name=\"timings\"\n              component={this.renderField}\n              label=\"Company Timings\"\n            />\n            <button type=\"submit\" className=\"btn btn-primary\">\n              Submit\n            </button>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default reduxForm({\n  // validate,\n  form: \"companyForm\"\n})(\n  connect(\n    null,\n    null\n  )(CompanyForm)\n);\n"]},"metadata":{},"sourceType":"module"}