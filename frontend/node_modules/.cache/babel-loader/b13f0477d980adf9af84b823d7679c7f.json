{"ast":null,"code":"import _isFunction from \"lodash/isFunction\";\nimport _defaults from \"lodash/defaults\";\nimport _assign from \"lodash/assign\";\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (typeof call === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n/*eslint no-magic-numbers: [\"error\", { \"ignore\": [0, 0.5, 1, 2] }]*/\n\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Helpers, CommonProps, Rect, Line } from \"victory-core\";\n\nvar Candle =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Candle, _React$Component);\n\n  function Candle() {\n    _classCallCheck(this, Candle);\n\n    return _possibleConstructorReturn(this, (Candle.__proto__ || Object.getPrototypeOf(Candle)).apply(this, arguments));\n  }\n\n  _createClass(Candle, [{\n    key: \"getCandleWidth\",\n    value: function getCandleWidth(props, style) {\n      var active = props.active,\n          datum = props.datum,\n          data = props.data,\n          candleWidth = props.candleWidth,\n          scale = props.scale,\n          defaultCandleWidth = props.defaultCandleWidth;\n\n      if (candleWidth) {\n        return _isFunction(candleWidth) ? Helpers.evaluateProp(candleWidth, datum, active) : candleWidth;\n      } else if (style.width) {\n        return style.width;\n      }\n\n      var range = scale.x.range();\n      var extent = Math.abs(range[1] - range[0]);\n      var candles = data.length + 2;\n      var candleRatio = props.candleRatio || 0.5;\n      var defaultWidth = candleRatio * (data.length < 2 ? defaultCandleWidth : extent / candles);\n      return Math.max(1, defaultWidth);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _props = this.props,\n          x = _props.x,\n          high = _props.high,\n          low = _props.low,\n          open = _props.open,\n          close = _props.close,\n          datum = _props.datum,\n          active = _props.active,\n          events = _props.events,\n          groupComponent = _props.groupComponent,\n          clipPath = _props.clipPath,\n          id = _props.id,\n          rectComponent = _props.rectComponent,\n          lineComponent = _props.lineComponent,\n          role = _props.role,\n          shapeRendering = _props.shapeRendering,\n          className = _props.className,\n          wickStrokeWidth = _props.wickStrokeWidth,\n          transform = _props.transform;\n      var style = Helpers.evaluateStyle(_assign({\n        stroke: \"black\"\n      }, this.props.style), datum, active);\n\n      var wickStyle = _defaults({\n        strokeWidth: wickStrokeWidth\n      }, style);\n\n      var candleWidth = this.getCandleWidth(this.props, style);\n      var candleHeight = Math.abs(close - open);\n      var candleX = x - candleWidth / 2;\n      var sharedProps = {\n        role: role,\n        shapeRendering: shapeRendering,\n        className: className,\n        events: events,\n        transform: transform,\n        clipPath: clipPath\n      };\n\n      var candleProps = _assign({\n        key: \"\".concat(id, \"-candle\"),\n        style: style,\n        x: candleX,\n        y: Math.min(open, close),\n        width: candleWidth,\n        height: candleHeight\n      }, sharedProps);\n\n      var highWickProps = _assign({\n        key: \"\".concat(id, \"-highWick\"),\n        style: wickStyle,\n        x1: x,\n        x2: x,\n        y1: high,\n        y2: Math.min(open, close)\n      }, sharedProps);\n\n      var lowWickProps = _assign({\n        key: \"\".concat(id, \"-lowWick\"),\n        style: wickStyle,\n        x1: x,\n        x2: x,\n        y1: Math.max(open, close),\n        y2: low\n      }, sharedProps);\n\n      return React.cloneElement(groupComponent, {}, [React.cloneElement(rectComponent, candleProps), React.cloneElement(lineComponent, highWickProps), React.cloneElement(lineComponent, lowWickProps)]);\n    }\n  }]);\n\n  return Candle;\n}(React.Component);\n\nObject.defineProperty(Candle, \"propTypes\", {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  value: _objectSpread({}, CommonProps.primitiveProps, {\n    candleRatio: PropTypes.number,\n    candleWidth: PropTypes.oneOfType([PropTypes.number, PropTypes.func]),\n    close: PropTypes.number,\n    datum: PropTypes.object,\n    defaultCandleWidth: PropTypes.number,\n    groupComponent: PropTypes.element,\n    high: PropTypes.number,\n    lineComponent: PropTypes.element,\n    low: PropTypes.number,\n    open: PropTypes.number,\n    rectComponent: PropTypes.element,\n    wickStrokeWidth: PropTypes.number,\n    width: PropTypes.number,\n    x: PropTypes.number\n  })\n});\nObject.defineProperty(Candle, \"defaultProps\", {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  value: {\n    defaultCandleWidth: 8,\n    groupComponent: React.createElement(\"g\", null),\n    lineComponent: React.createElement(Line, null),\n    rectComponent: React.createElement(Rect, null)\n  }\n});\nexport { Candle as default };","map":null,"metadata":{},"sourceType":"module"}