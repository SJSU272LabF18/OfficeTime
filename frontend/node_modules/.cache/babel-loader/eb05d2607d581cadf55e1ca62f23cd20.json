{"ast":null,"code":"import _flatten from \"lodash/flatten\";\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}\n\nfunction _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (typeof call === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Helpers, VictoryLabel, addEvents, LineSegment, PropTypes as CustomPropTypes, VictoryContainer, VictoryTheme, Box, Whisker, DefaultTransitions, CommonProps } from \"victory-core\";\nimport { getDomain, getData, getBaseProps } from \"./helper-methods\";\nvar fallbackProps = {\n  width: 450,\n  height: 300,\n  padding: {\n    top: 20,\n    right: 20,\n    bottom: 20,\n    left: 20\n  }\n};\nvar options = {\n  components: [{\n    name: \"min\"\n  }, {\n    name: \"minLabels\"\n  }, {\n    name: \"max\"\n  }, {\n    name: \"maxLabels\"\n  }, {\n    name: \"median\"\n  }, {\n    name: \"medianLabels\"\n  }, {\n    name: \"q1\"\n  }, {\n    name: \"q1Labels\"\n  }, {\n    name: \"q3\"\n  }, {\n    name: \"q3Labels\"\n  }, {\n    name: \"parent\",\n    index: \"parent\"\n  }]\n};\nvar defaultData = [{\n  x: 1,\n  min: 5,\n  q1: 7,\n  median: 12,\n  q3: 18,\n  max: 20\n}, {\n  x: 2,\n  min: 2,\n  q1: 5,\n  median: 8,\n  q3: 12,\n  max: 15\n}];\nvar animationWhitelist = [\"data\", \"domain\", \"height\", \"padding\", \"style\", \"width\"];\n\nvar VictoryBoxPlot =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(VictoryBoxPlot, _React$Component);\n\n  function VictoryBoxPlot() {\n    _classCallCheck(this, VictoryBoxPlot);\n\n    return _possibleConstructorReturn(this, (VictoryBoxPlot.__proto__ || Object.getPrototypeOf(VictoryBoxPlot)).apply(this, arguments));\n  }\n\n  _createClass(VictoryBoxPlot, [{\n    key: \"renderBoxPlot\",\n    value: function renderBoxPlot(props) {\n      var _this = this;\n\n      var types = [\"q1\", \"q3\", \"max\", \"min\", \"median\"];\n\n      var dataComponents = _flatten(types.map(function (type) {\n        return _this.dataKeys.map(function (key, index) {\n          var baseComponent = props[\"\".concat(type, \"Component\")];\n\n          var componentProps = _this.getComponentProps(baseComponent, type, index);\n\n          return React.cloneElement(baseComponent, componentProps);\n        });\n      }));\n\n      var labelComponents = _flatten(types.map(function (type) {\n        var components = _this.dataKeys.map(function (key, index) {\n          var name = \"\".concat(type, \"Labels\");\n          var baseComponent = props[\"\".concat(type, \"LabelComponent\")];\n\n          var labelProps = _this.getComponentProps(baseComponent, name, index);\n\n          if (labelProps.text !== undefined && labelProps.text !== null) {\n            return React.cloneElement(baseComponent, labelProps);\n          }\n\n          return undefined;\n        });\n\n        return components.filter(Boolean);\n      }));\n\n      var children = _toConsumableArray(dataComponents).concat(_toConsumableArray(labelComponents));\n\n      return this.renderContainer(props.groupComponent, children);\n    } // Overridden in native versions\n\n  }, {\n    key: \"shouldAnimate\",\n    value: function shouldAnimate() {\n      return !!this.props.animate;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var role = this.constructor.role;\n      var props = Helpers.modifyProps(this.props, fallbackProps, role);\n\n      if (this.shouldAnimate()) {\n        return this.animateComponent(props, animationWhitelist);\n      }\n\n      var children = this.renderBoxPlot(props);\n      return props.standalone ? this.renderContainer(props.containerComponent, children) : children;\n    }\n  }]);\n\n  return VictoryBoxPlot;\n}(React.Component);\n\nObject.defineProperty(VictoryBoxPlot, \"displayName\", {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  value: \"VictoryBoxPlot\"\n});\nObject.defineProperty(VictoryBoxPlot, \"role\", {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  value: \"boxplot\"\n});\nObject.defineProperty(VictoryBoxPlot, \"defaultTransitions\", {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  value: DefaultTransitions.discreteTransitions()\n});\nObject.defineProperty(VictoryBoxPlot, \"propTypes\", {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  value: _objectSpread({}, CommonProps.baseProps, CommonProps.dataProps, {\n    boxWidth: PropTypes.number,\n    events: PropTypes.arrayOf(PropTypes.shape({\n      target: PropTypes.oneOf([\"max\", \"maxLabels\", \"median\", \"medianLabels\", \"min\", \"minLabels\", \"q1\", \"q1Labels\", \"q3\", \"q3Labels\", \"parent\"]),\n      eventKey: PropTypes.oneOfType([PropTypes.array, CustomPropTypes.allOfType([CustomPropTypes.integer, CustomPropTypes.nonNegative]), PropTypes.string]),\n      eventHandlers: PropTypes.object\n    })),\n    horizontal: PropTypes.bool,\n    labelOrientation: PropTypes.oneOf([\"top\", \"bottom\", \"left\", \"right\"]),\n    labels: PropTypes.bool,\n    max: PropTypes.oneOfType([PropTypes.func, CustomPropTypes.allOfType([CustomPropTypes.integer, CustomPropTypes.nonNegative]), PropTypes.string, PropTypes.arrayOf(PropTypes.string)]),\n    maxComponent: PropTypes.element,\n    maxLabelComponent: PropTypes.element,\n    maxLabels: PropTypes.oneOfType([PropTypes.func, PropTypes.array, PropTypes.bool]),\n    median: PropTypes.oneOfType([PropTypes.func, CustomPropTypes.allOfType([CustomPropTypes.integer, CustomPropTypes.nonNegative]), PropTypes.string, PropTypes.arrayOf(PropTypes.string)]),\n    medianComponent: PropTypes.element,\n    medianLabelComponent: PropTypes.element,\n    medianLabels: PropTypes.oneOfType([PropTypes.func, PropTypes.array, PropTypes.bool]),\n    min: PropTypes.oneOfType([PropTypes.func, CustomPropTypes.allOfType([CustomPropTypes.integer, CustomPropTypes.nonNegative]), PropTypes.string, PropTypes.arrayOf(PropTypes.string)]),\n    minComponent: PropTypes.element,\n    minLabelComponent: PropTypes.element,\n    minLabels: PropTypes.oneOfType([PropTypes.func, PropTypes.array, PropTypes.bool]),\n    q1: PropTypes.oneOfType([PropTypes.func, CustomPropTypes.allOfType([CustomPropTypes.integer, CustomPropTypes.nonNegative]), PropTypes.string, PropTypes.arrayOf(PropTypes.string)]),\n    q1Component: PropTypes.element,\n    q1LabelComponent: PropTypes.element,\n    q1Labels: PropTypes.oneOfType([PropTypes.func, PropTypes.array, PropTypes.bool]),\n    q3: PropTypes.oneOfType([PropTypes.func, CustomPropTypes.allOfType([CustomPropTypes.integer, CustomPropTypes.nonNegative]), PropTypes.string, PropTypes.arrayOf(PropTypes.string)]),\n    q3Component: PropTypes.element,\n    q3LabelComponent: PropTypes.element,\n    q3Labels: PropTypes.oneOfType([PropTypes.func, PropTypes.array, PropTypes.bool]),\n    style: PropTypes.shape({\n      boxes: PropTypes.object,\n      labels: PropTypes.object,\n      parent: PropTypes.object,\n      max: PropTypes.object,\n      maxLabels: PropTypes.object,\n      median: PropTypes.object,\n      medianLabels: PropTypes.object,\n      min: PropTypes.object,\n      minLabels: PropTypes.object,\n      q1: PropTypes.object,\n      q1Labels: PropTypes.object,\n      q3: PropTypes.object,\n      q3Labels: PropTypes.object,\n      whiskers: PropTypes.object\n    }),\n    whiskerWidth: PropTypes.number\n  })\n});\nObject.defineProperty(VictoryBoxPlot, \"defaultProps\", {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  value: {\n    containerComponent: React.createElement(VictoryContainer, null),\n    data: defaultData,\n    dataComponent: React.createElement(Box, null),\n    groupComponent: React.createElement(\"g\", {\n      role: \"presentation\"\n    }),\n    maxComponent: React.createElement(Whisker, null),\n    maxLabelComponent: React.createElement(VictoryLabel, null),\n    medianComponent: React.createElement(LineSegment, null),\n    medianLabelComponent: React.createElement(VictoryLabel, null),\n    minComponent: React.createElement(Whisker, null),\n    minLabelComponent: React.createElement(VictoryLabel, null),\n    q1Component: React.createElement(Box, null),\n    q1LabelComponent: React.createElement(VictoryLabel, null),\n    q3Component: React.createElement(Box, null),\n    q3LabelComponent: React.createElement(VictoryLabel, null),\n    samples: 50,\n    scale: \"linear\",\n    sortKey: \"x\",\n    sortOrder: \"ascending\",\n    standalone: true,\n    theme: VictoryTheme.grayscale\n  }\n});\nObject.defineProperty(VictoryBoxPlot, \"getDomain\", {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  value: getDomain\n});\nObject.defineProperty(VictoryBoxPlot, \"getData\", {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  value: getData\n});\nObject.defineProperty(VictoryBoxPlot, \"getBaseProps\", {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  value: function value(props) {\n    return getBaseProps(props, fallbackProps);\n  }\n});\nObject.defineProperty(VictoryBoxPlot, \"expectedComponents\", {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  value: [\"maxComponent\", \"maxLabelComponent\", \"medianComponent\", \"medianLabelComponent\", \"minComponent\", \"minLabelComponent\", \"q1Component\", \"q1LabelComponent\", \"q3Component\", \"q3LabelComponent\", \"groupComponent\", \"containerComponent\"]\n});\nexport default addEvents(VictoryBoxPlot, options);","map":null,"metadata":{},"sourceType":"module"}