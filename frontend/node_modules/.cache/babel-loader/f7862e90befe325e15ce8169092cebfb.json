{"ast":null,"code":"import _assign from \"lodash/assign\";\nimport { Helpers, LabelHelpers, Scale, Domain, Data, Collection } from \"victory-core\";\n\nvar getData = function getData(props) {\n  var accessorTypes = [\"x\", \"high\", \"low\", \"close\", \"open\"];\n  return Data.formatData(props.data, props, accessorTypes);\n};\n\nvar reduceData = function reduceData(dataset, axis, type) {\n  var yDataTypes = {\n    min: \"_low\",\n    max: \"_high\"\n  };\n  var dataType = axis === \"x\" ? \"_x\" : yDataTypes[type];\n  var baseCondition = type === \"min\" ? Infinity : -Infinity;\n  return dataset.reduce(function (memo, datum) {\n    var current = datum[dataType];\n    return memo < current && type === \"min\" || memo > current && type === \"max\" ? memo : current;\n  }, baseCondition);\n};\n\nvar getDomainFromData = function getDomainFromData(props, axis) {\n  var minDomain = Domain.getMinFromProps(props, axis);\n  var maxDomain = Domain.getMaxFromProps(props, axis);\n  var dataset = getData(props);\n\n  if (dataset.length < 1) {\n    var scaleDomain = Scale.getBaseScale(props, axis).domain();\n\n    var _min = minDomain !== undefined ? minDomain : Collection.getMinValue(scaleDomain);\n\n    var _max = maxDomain !== undefined ? maxDomain : Collection.getMaxValue(scaleDomain);\n\n    return Domain.getDomainFromMinMax(_min, _max);\n  }\n\n  var min = minDomain !== undefined ? minDomain : reduceData(dataset, axis, \"min\");\n  var max = maxDomain !== undefined ? maxDomain : reduceData(dataset, axis, \"max\");\n  return Domain.getDomainFromMinMax(min, max);\n};\n\nvar getDomain = function getDomain(props, axis) {\n  return Domain.createDomainFunction(getDomainFromData)(props, axis);\n};\n\nvar getCalculatedValues = function getCalculatedValues(props) {\n  var theme = props.theme,\n      polar = props.polar;\n  var defaultStyle = theme && theme.candlestick && theme.candlestick.style ? theme.candlestick.style : {};\n  var style = Helpers.getStyles(props.style, defaultStyle);\n  var data = getData(props);\n  var range = {\n    x: Helpers.getRange(props, \"x\"),\n    y: Helpers.getRange(props, \"y\")\n  };\n  var domain = {\n    x: getDomain(props, \"x\"),\n    y: getDomain(props, \"y\")\n  };\n  var scale = {\n    x: Scale.getBaseScale(props, \"x\").domain(domain.x).range(range.x),\n    y: Scale.getBaseScale(props, \"y\").domain(domain.y).range(range.y)\n  };\n  var origin = polar ? props.origin || Helpers.getPolarOrigin(props) : undefined;\n  return {\n    domain: domain,\n    data: data,\n    scale: scale,\n    style: style,\n    origin: origin\n  };\n};\n\nvar isTransparent = function isTransparent(attr) {\n  return attr === \"none\" || attr === \"transparent\";\n};\n\nvar getDataStyles = function getDataStyles(datum, style, props) {\n  style = style || {};\n  var candleColor = datum.open > datum.close ? props.candleColors.negative : props.candleColors.positive;\n  var fill = style.fill || candleColor;\n  var strokeColor = style.stroke;\n  var stroke = isTransparent(strokeColor) ? fill : strokeColor || \"black\";\n  return _assign({}, style, {\n    stroke: stroke,\n    fill: fill\n  });\n};\n\nvar getLabelProps = function getLabelProps(dataProps, text, style) {\n  var x = dataProps.x,\n      high = dataProps.high,\n      index = dataProps.index,\n      scale = dataProps.scale,\n      datum = dataProps.datum,\n      data = dataProps.data;\n  var labelStyle = style.labels || {};\n  return {\n    style: labelStyle,\n    y: high - (labelStyle.padding || 0),\n    x: x,\n    text: text,\n    index: index,\n    scale: scale,\n    datum: datum,\n    data: data,\n    textAnchor: labelStyle.textAnchor,\n    verticalAnchor: labelStyle.verticalAnchor || \"end\",\n    angle: labelStyle.angle\n  };\n};\n\nvar getBaseProps = function getBaseProps(props, fallbackProps) {\n  // eslint-disable-line max-statements\n  props = Helpers.modifyProps(props, fallbackProps, \"candlestick\");\n  var calculatedValues = getCalculatedValues(props);\n  var data = calculatedValues.data,\n      style = calculatedValues.style,\n      scale = calculatedValues.scale,\n      domain = calculatedValues.domain,\n      origin = calculatedValues.origin;\n  var _props = props,\n      groupComponent = _props.groupComponent,\n      width = _props.width,\n      height = _props.height,\n      padding = _props.padding,\n      standalone = _props.standalone,\n      name = _props.name,\n      candleWidth = _props.candleWidth,\n      candleRatio = _props.candleRatio,\n      theme = _props.theme,\n      polar = _props.polar,\n      wickStrokeWidth = _props.wickStrokeWidth,\n      labels = _props.labels,\n      events = _props.events,\n      sharedEvents = _props.sharedEvents;\n  var initialChildProps = {\n    parent: {\n      domain: domain,\n      scale: scale,\n      width: width,\n      height: height,\n      data: data,\n      standalone: standalone,\n      theme: theme,\n      polar: polar,\n      origin: origin,\n      name: name,\n      style: style.parent,\n      padding: padding\n    }\n  };\n  return data.reduce(function (childProps, datum, index) {\n    var eventKey = datum.eventKey || index;\n    var x = scale.x(datum._x1 !== undefined ? datum._x1 : datum._x);\n    var high = scale.y(datum._high);\n    var close = scale.y(datum._close);\n    var open = scale.y(datum._open);\n    var low = scale.y(datum._low);\n    var dataStyle = getDataStyles(datum, style.data, props);\n    var dataProps = {\n      x: x,\n      high: high,\n      low: low,\n      candleWidth: candleWidth,\n      candleRatio: candleRatio,\n      scale: scale,\n      data: data,\n      datum: datum,\n      groupComponent: groupComponent,\n      index: index,\n      style: dataStyle,\n      width: width,\n      polar: polar,\n      origin: origin,\n      wickStrokeWidth: wickStrokeWidth,\n      open: open,\n      close: close\n    };\n    childProps[eventKey] = {\n      data: dataProps\n    };\n    var text = LabelHelpers.getText(props, datum, index);\n\n    if (text !== undefined && text !== null || labels && (events || sharedEvents)) {\n      childProps[eventKey].labels = getLabelProps(dataProps, text, style);\n    }\n\n    return childProps;\n  }, initialChildProps);\n};\n\nexport { getBaseProps, getDomain, getData };","map":null,"metadata":{},"sourceType":"module"}